name: Python Tests

on:
  # Triggers the workflow on push or pull request events to the 'main' branch
  push:
  pull_request:

jobs:
  test:
    # Specifies the runner environment for the job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        # Downloads a copy of your repository's code
        uses: actions/checkout@v4

      - name: Set up Python
        # Configures the specified Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        # Installs all necessary packages
        run: |
          # Upgrade pip to the latest version
          python -m pip install --upgrade pip
          
          # Install dependencies from requirements.txt if the file exists
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
          # Install testing and notebook execution tools
          pip install pytest jupyter

      - name: Run Python tests
        # Executes pytest if a 'tests' directory is found
        run: |
          if [ -d tests ]; then pytest -v; else echo "No tests folder found. Skipping unit tests."; fi

      - name: Execute Jupyter notebooks (Fixed)
        run: |
          echo "Checking Jupyter notebooks for execution errors..."
          # Install the 'null' writer if available, or stick to the robust method below.
          # Stick to the robust method: use a temporary output file and discard it.
          for nb in *.ipynb; do
            echo "Running $nb"
            # Execute the notebook, writing the output to a harmless temporary location in /tmp
            jupyter nbconvert --to notebook --execute "$nb" --output-dir /tmp
            # Clean up the temporary output file immediately
            rm /tmp/$(basename "$nb")
          done

      - name: Run pytest (if available)
        run: |
          if [ -d "tests" ]; then
            pytest -v
          else
            echo "No tests folder found, skipping pytest"
          fi
